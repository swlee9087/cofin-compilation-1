{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/* tslint:disable:jsx-no-multiline-js */\n\nconst d3_cloud_1 = __importDefault(require(\"d3-cloud\"));\n\nconst PropTypes = __importStar(require(\"prop-types\"));\n\nconst React = __importStar(require(\"react\"));\n\nconst react_measure_1 = __importDefault(require(\"react-measure\"));\n\nclass TagCloud extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      children: undefined,\n      height: 0,\n      width: 0,\n      wrappedChildren: []\n    };\n    this.mounted = false;\n    this.resizeTimer = undefined;\n    this.fontFamily = this.getStyleValue.bind(this, \"fontFamily\");\n    this.fontSize = this.getStyleValue.bind(this, \"fontSize\");\n    this.fontWeight = this.getStyleValue.bind(this, \"fontWeight\");\n    this.fontStyle = this.getStyleValue.bind(this, \"fontStyle\");\n    this.padding = this.getStyleValue.bind(this, \"padding\");\n\n    this.rotate = word => {\n      const value = word.child.props.rotate || this.props.rotate || TagCloud.defaultProps.rotate;\n\n      if (typeof value === \"function\") {\n        return value(word.child.props);\n      } else {\n        return value;\n      }\n    };\n\n    this.text = word => {\n      let text = word.child.props.text;\n\n      if (!text) {\n        const children = word.child.props.children;\n        text = Array.isArray(children) ? children[0] : children;\n      }\n\n      return text;\n    };\n\n    this.onResize = contentRect => {\n      const {\n        width,\n        height\n      } = contentRect.bounds;\n\n      if (this.state.width !== width || this.state.height !== height) {\n        // Handle the initial size observer immediately\n        if (!this.state.width && !this.state.height) {\n          this.setState({\n            height,\n            width\n          });\n          return;\n        } // Handle resizes with a debounce timeout of 100ms\n\n\n        if (this.resizeTimer) {\n          clearTimeout(this.resizeTimer);\n        }\n\n        this.resizeTimer = setTimeout(() => {\n          this.resizeTimer = undefined;\n\n          if (this.mounted) {\n            this.setState({\n              children: undefined,\n              height,\n              width\n            });\n          }\n        }, 100);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  calculateLayout(props, state) {\n    const {\n      children,\n      spiral,\n      random,\n      style\n    } = props;\n    const {\n      width,\n      height\n    } = state;\n    const spiralAny = spiral;\n    return new Promise(resolve => {\n      const words = React.Children.map(children, child => ({\n        child\n      }));\n      let res = d3_cloud_1.default().size([width, height]).words(words).text(this.text).font(this.fontFamily).fontStyle(this.fontStyle).fontWeight(this.fontWeight).fontSize(this.fontSize).rotate(this.rotate).padding(this.padding);\n\n      if (spiralAny) {\n        res = res.spiral(spiralAny);\n      }\n\n      if (random) {\n        res = res.random(random);\n      }\n\n      res.on(\"end\", items => {\n        const newChildren = items.map((item, index) => {\n          let x = item.x;\n          x += item.x0;\n          x += width / 2;\n          let y = item.y;\n          y += item.y0;\n          y += height / 2;\n          const transform = `translate(${x}px,${y}px) rotate(${item.rotate}deg)`;\n          const newStyle = Object.assign({\n            position: \"absolute\"\n          }, item.child.props.style, {\n            MozTransform: transform,\n            MsTransform: transform,\n            OTransform: transform,\n            WebkitTransform: transform,\n            fontFamily: item.font,\n            fontSize: item.size,\n            fontStyle: item.style,\n            fontWeight: item.weight,\n            textAlign: \"center\",\n            transform,\n            transformOrigin: \"center bottom\",\n            whiteSpace: \"nowrap\",\n            width: item.width\n          });\n\n          if (!newStyle.color && style.color && typeof style.color === \"function\") {\n            newStyle.color = style.color(item.child, index);\n          }\n\n          return React.cloneElement(item.child, Object.assign({}, item.child.props, {\n            key: item.text,\n            style: newStyle\n          }), item.child.props.children);\n        });\n        resolve(newChildren);\n      }).start();\n    });\n  }\n\n  getStyleValue(propName, word) {\n    const childValue = word.child.props.style ? word.child.props.style[propName] : undefined;\n    let value = childValue || this.props.style[propName] || TagCloud.defaultProps.style[propName];\n\n    if (typeof value === \"function\") {\n      value = value(word.child.props);\n    }\n\n    if (propName === \"fontSize\") {\n      value += 2;\n    }\n\n    return value;\n  }\n\n  render() {\n    const _a = this.props,\n          {\n      style,\n      children,\n      // eslint-disable-line\n      rotate,\n      // eslint-disable-line\n      spiral,\n      // eslint-disable-line\n      random\n    } = _a,\n          // eslint-disable-line\n    props = __rest(_a, [\"style\", \"children\", \"rotate\", \"spiral\", \"random\"]);\n\n    const {\n      fontFamily,\n      // eslint-disable-line\n      fontSize,\n      // eslint-disable-line\n      fontWeight,\n      // eslint-disable-line\n      fontStyle,\n      // eslint-disable-line\n      color,\n      // eslint-disable-line\n      padding\n    } = style,\n          // eslint-disable-line\n    otherStyle = __rest(style, [\"fontFamily\", \"fontSize\", \"fontWeight\", \"fontStyle\", \"color\", \"padding\"]);\n\n    const {\n      wrappedChildren\n    } = this.state;\n    return React.createElement(react_measure_1.default, {\n      bounds: true,\n      onResize: this.onResize\n    }, ({\n      measureRef\n    }) => React.createElement(\"div\", Object.assign({\n      ref: measureRef\n    }, props, {\n      style: otherStyle\n    }), wrappedChildren));\n  }\n\n  componentDidUpdate() {\n    const {\n      width,\n      height\n    } = this.state;\n    const {\n      children\n    } = this.props;\n\n    if (width && height && children !== this.state.children) {\n      this.calculateLayout(this.props, this.state).then(wrappedChildren => {\n        if (!this.mounted) {\n          return;\n        }\n\n        this.setState({\n          children,\n          wrappedChildren\n        });\n      });\n    }\n  }\n\n}\n\nTagCloud.propTypes = {\n  children: PropTypes.any,\n  random: PropTypes.func,\n  rotate: PropTypes.oneOfType([PropTypes.func, PropTypes.number]),\n  spiral: PropTypes.oneOfType([PropTypes.oneOf([\"archimedean\", \"rectangular\"]), PropTypes.func]),\n  style: PropTypes.shape({\n    color: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    fontFamily: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    fontSize: PropTypes.oneOfType([PropTypes.func, PropTypes.number]),\n    fontStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    fontWeight: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string]),\n    padding: PropTypes.oneOfType([PropTypes.func, PropTypes.number])\n  })\n};\nTagCloud.defaultProps = {\n  random: Math.random,\n  rotate: 0,\n  spiral: \"archimedean\",\n  style: {\n    fontFamily: \"serif\",\n    fontSize: 20,\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    padding: 1\n  }\n};\nexports.default = TagCloud;","map":{"version":3,"sources":["C:/Users/bitcamp/____/Projects/ui/node_modules/react-tag-cloud/dist/TagCloud.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","__importDefault","mod","__esModule","__importStar","result","k","defineProperty","exports","value","d3_cloud_1","require","PropTypes","React","react_measure_1","TagCloud","Component","constructor","arguments","state","children","undefined","height","width","wrappedChildren","mounted","resizeTimer","fontFamily","getStyleValue","bind","fontSize","fontWeight","fontStyle","padding","rotate","word","child","props","defaultProps","text","Array","isArray","onResize","contentRect","bounds","setState","clearTimeout","setTimeout","componentDidMount","componentWillUnmount","calculateLayout","spiral","random","style","spiralAny","Promise","resolve","words","Children","map","res","default","size","font","on","items","newChildren","item","index","x","x0","y","y0","transform","newStyle","assign","position","MozTransform","MsTransform","OTransform","WebkitTransform","weight","textAlign","transformOrigin","whiteSpace","color","cloneElement","key","start","propName","childValue","render","_a","otherStyle","createElement","measureRef","ref","componentDidUpdate","then","propTypes","any","func","oneOfType","number","oneOf","shape","string","Math"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* tslint:disable:jsx-no-multiline-js */\nconst d3_cloud_1 = __importDefault(require(\"d3-cloud\"));\nconst PropTypes = __importStar(require(\"prop-types\"));\nconst React = __importStar(require(\"react\"));\nconst react_measure_1 = __importDefault(require(\"react-measure\"));\nclass TagCloud extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            children: undefined,\n            height: 0,\n            width: 0,\n            wrappedChildren: [],\n        };\n        this.mounted = false;\n        this.resizeTimer = undefined;\n        this.fontFamily = this.getStyleValue.bind(this, \"fontFamily\");\n        this.fontSize = this.getStyleValue.bind(this, \"fontSize\");\n        this.fontWeight = this.getStyleValue.bind(this, \"fontWeight\");\n        this.fontStyle = this.getStyleValue.bind(this, \"fontStyle\");\n        this.padding = this.getStyleValue.bind(this, \"padding\");\n        this.rotate = (word) => {\n            const value = word.child.props.rotate ||\n                this.props.rotate ||\n                TagCloud.defaultProps.rotate;\n            if (typeof value === \"function\") {\n                return value(word.child.props);\n            }\n            else {\n                return value;\n            }\n        };\n        this.text = (word) => {\n            let text = word.child.props.text;\n            if (!text) {\n                const children = word.child.props.children;\n                text = Array.isArray(children) ? children[0] : children;\n            }\n            return text;\n        };\n        this.onResize = (contentRect) => {\n            const { width, height } = contentRect.bounds;\n            if (this.state.width !== width || this.state.height !== height) {\n                // Handle the initial size observer immediately\n                if (!this.state.width && !this.state.height) {\n                    this.setState({\n                        height,\n                        width,\n                    });\n                    return;\n                }\n                // Handle resizes with a debounce timeout of 100ms\n                if (this.resizeTimer) {\n                    clearTimeout(this.resizeTimer);\n                }\n                this.resizeTimer = setTimeout(() => {\n                    this.resizeTimer = undefined;\n                    if (this.mounted) {\n                        this.setState({\n                            children: undefined,\n                            height,\n                            width,\n                        });\n                    }\n                }, 100);\n            }\n        };\n    }\n    componentDidMount() {\n        this.mounted = true;\n    }\n    componentWillUnmount() {\n        this.mounted = false;\n    }\n    calculateLayout(props, state) {\n        const { children, spiral, random, style } = props;\n        const { width, height } = state;\n        const spiralAny = spiral;\n        return new Promise((resolve) => {\n            const words = React.Children.map(children, (child) => ({ child }));\n            let res = d3_cloud_1.default()\n                .size([width, height])\n                .words(words)\n                .text(this.text)\n                .font(this.fontFamily)\n                .fontStyle(this.fontStyle)\n                .fontWeight(this.fontWeight)\n                .fontSize(this.fontSize)\n                .rotate(this.rotate)\n                .padding(this.padding);\n            if (spiralAny) {\n                res = res.spiral(spiralAny);\n            }\n            if (random) {\n                res = res.random(random);\n            }\n            res\n                .on(\"end\", (items) => {\n                const newChildren = items.map((item, index) => {\n                    let x = item.x;\n                    x += item.x0;\n                    x += width / 2;\n                    let y = item.y;\n                    y += item.y0;\n                    y += height / 2;\n                    const transform = `translate(${x}px,${y}px) rotate(${item.rotate}deg)`;\n                    const newStyle = Object.assign({ position: \"absolute\" }, item.child.props.style, { MozTransform: transform, MsTransform: transform, OTransform: transform, WebkitTransform: transform, fontFamily: item.font, fontSize: item.size, fontStyle: item.style, fontWeight: item.weight, textAlign: \"center\", transform, transformOrigin: \"center bottom\", whiteSpace: \"nowrap\", width: item.width });\n                    if (!newStyle.color &&\n                        style.color &&\n                        typeof style.color === \"function\") {\n                        newStyle.color = style.color(item.child, index);\n                    }\n                    return React.cloneElement(item.child, Object.assign({}, item.child.props, { key: item.text, style: newStyle }), item.child.props.children);\n                });\n                resolve(newChildren);\n            })\n                .start();\n        });\n    }\n    getStyleValue(propName, word) {\n        const childValue = word.child.props.style\n            ? word.child.props.style[propName]\n            : undefined;\n        let value = childValue ||\n            this.props.style[propName] ||\n            TagCloud.defaultProps.style[propName];\n        if (typeof value === \"function\") {\n            value = value(word.child.props);\n        }\n        if (propName === \"fontSize\") {\n            value += 2;\n        }\n        return value;\n    }\n    render() {\n        const _a = this.props, { style, children, // eslint-disable-line\n        rotate, // eslint-disable-line\n        spiral, // eslint-disable-line\n        random } = _a, // eslint-disable-line\n        props = __rest(_a, [\"style\", \"children\", \"rotate\", \"spiral\", \"random\"]);\n        const { fontFamily, // eslint-disable-line\n        fontSize, // eslint-disable-line\n        fontWeight, // eslint-disable-line\n        fontStyle, // eslint-disable-line\n        color, // eslint-disable-line\n        padding } = style, // eslint-disable-line\n        otherStyle = __rest(style, [\"fontFamily\", \"fontSize\", \"fontWeight\", \"fontStyle\", \"color\", \"padding\"]);\n        const { wrappedChildren } = this.state;\n        return (React.createElement(react_measure_1.default, { bounds: true, onResize: this.onResize }, ({ measureRef }) => (React.createElement(\"div\", Object.assign({ ref: measureRef }, props, { style: otherStyle }), wrappedChildren))));\n    }\n    componentDidUpdate() {\n        const { width, height } = this.state;\n        const { children } = this.props;\n        if (width && height && children !== this.state.children) {\n            this.calculateLayout(this.props, this.state).then((wrappedChildren) => {\n                if (!this.mounted) {\n                    return;\n                }\n                this.setState({\n                    children,\n                    wrappedChildren,\n                });\n            });\n        }\n    }\n}\nTagCloud.propTypes = {\n    children: PropTypes.any,\n    random: PropTypes.func,\n    rotate: PropTypes.oneOfType([PropTypes.func, PropTypes.number]),\n    spiral: PropTypes.oneOfType([\n        PropTypes.oneOf([\"archimedean\", \"rectangular\"]),\n        PropTypes.func,\n    ]),\n    style: PropTypes.shape({\n        color: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n        fontFamily: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n        fontSize: PropTypes.oneOfType([PropTypes.func, PropTypes.number]),\n        fontStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n        fontWeight: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        padding: PropTypes.oneOfType([PropTypes.func, PropTypes.number]),\n    }),\n};\nTagCloud.defaultProps = {\n    random: Math.random,\n    rotate: 0,\n    spiral: \"archimedean\",\n    style: {\n        fontFamily: \"serif\",\n        fontSize: 20,\n        fontStyle: \"normal\",\n        fontWeight: \"normal\",\n        padding: 1,\n    },\n};\nexports.default = TagCloud;\n"]},"metadata":{},"sourceType":"script"}