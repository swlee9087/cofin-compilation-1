{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PathTooltip = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst react_1 = tslib_1.__importStar(require(\"react\"));\n\nexports.PathTooltip = props => {\n  const [hidden, setHidden] = react_1.useState(true);\n  const [tooltipRect, setTooltipRect] = react_1.useState({\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0,\n    isLeft: false,\n    isTop: false\n  });\n  const [fontSize] = react_1.useState(props[\"fontSize\"] || 12);\n  const [fontFamily] = react_1.useState(props[\"fontFamily\"] || \"sans-serif\");\n  const [bgColor] = react_1.useState(props[\"bgColor\"] || \"black\");\n  const [textColor] = react_1.useState(props[\"textColor\"] || \"white\");\n  const pathRef = props.pathRef;\n  const svgRef = props.svgRef;\n  const textRef = react_1.createRef();\n  react_1.useEffect(() => {\n    const updateTooltip = e => {\n      if (svgRef && pathRef && textRef && svgRef.current && pathRef.current && textRef.current) {\n        const svgRect = svgRef.current.getBoundingClientRect();\n        const textRect = textRef.current.getBoundingClientRect();\n        const isLeft = e.x - svgRect.x > svgRect.width / 2;\n        const isTop = e.y - svgRect.y > svgRect.height / 2;\n        const w = textRect.width + 20;\n        const h = textRect.height + 20;\n        const x = isLeft ? e.x - svgRect.x + 8 - w : e.x - svgRect.x - 8;\n        const y = isTop ? e.y - svgRect.y - 12 - h : e.y - svgRect.y + 8;\n        setTooltipRect({\n          x: x,\n          y: y,\n          w: w,\n          h: h,\n          isLeft: isLeft,\n          isTop: isTop\n        });\n      }\n    };\n\n    if (pathRef && pathRef.current) {\n      pathRef.current.addEventListener('mouseover', () => {\n        setHidden(false);\n      });\n      pathRef.current.addEventListener('mouseleave', () => {\n        setHidden(true);\n      });\n      pathRef.current.addEventListener('mousemove', e => {\n        if (!hidden) updateTooltip(e);\n      });\n    }\n  }, [pathRef, svgRef, textRef, hidden]);\n  const bottomRight = (tooltipRect.x + 7).toString() + \",\" + (tooltipRect.y - 10).toString() + \" \" + (tooltipRect.x + 30).toString() + \",\" + tooltipRect.y.toString() + \" \" + (tooltipRect.x + 22).toString() + \",\" + tooltipRect.y.toString();\n  const bottomLeft = (tooltipRect.x + tooltipRect.w - 8).toString() + \",\" + (tooltipRect.y - 10).toString() + \" \" + (tooltipRect.x + tooltipRect.w - 25).toString() + \",\" + tooltipRect.y.toString() + \" \" + (tooltipRect.x + tooltipRect.w - 15).toString() + \",\" + tooltipRect.y.toString();\n  const topRight = (tooltipRect.x + 7).toString() + \",\" + (tooltipRect.y + tooltipRect.h + 10).toString() + \" \" + (tooltipRect.x + 15).toString() + \",\" + (tooltipRect.y + tooltipRect.h).toString() + \" \" + (tooltipRect.x + 7).toString() + \",\" + (tooltipRect.y + tooltipRect.h).toString();\n  const topLeft = (tooltipRect.x + tooltipRect.w - 7).toString() + \",\" + (tooltipRect.y + tooltipRect.h + 10).toString() + \" \" + (tooltipRect.x + tooltipRect.w - 15).toString() + \",\" + (tooltipRect.y + tooltipRect.h).toString() + \" \" + (tooltipRect.x + tooltipRect.w - 7).toString() + \",\" + (tooltipRect.y + tooltipRect.h).toString();\n  const points = tooltipRect.isLeft && tooltipRect.isTop ? topLeft : tooltipRect.isTop ? topRight : tooltipRect.isLeft ? bottomLeft : bottomRight;\n\n  const findSpaceBeforeThreshold = (inputString, threshold) => {\n    let i = 0;\n    let temp = -1;\n\n    if (inputString.length <= threshold) {\n      return [\"\", inputString];\n    }\n\n    while (i <= inputString.length && i <= threshold) {\n      if (inputString[i] === \" \") {\n        temp = i;\n      }\n\n      i++;\n    }\n\n    return temp !== -1 ? [inputString.slice(0, temp), inputString.slice(temp + 1)] : [inputString.slice(0, threshold), inputString.slice(threshold + 1)];\n  };\n\n  const tips = [];\n  const startTip = findSpaceBeforeThreshold(props.tip, 35 - (1 * fontSize - 11));\n  tips.push(startTip[0]);\n  let interimTip = startTip[1];\n  let leftover = startTip[1];\n\n  while (interimTip !== \"\") {\n    const currTip = findSpaceBeforeThreshold(interimTip === leftover ? interimTip : leftover, 35 - (1 * fontSize - 11));\n    interimTip = currTip[0];\n    leftover = currTip[1];\n    tips.push(interimTip === \"\" ? currTip[1] : currTip[0]);\n  }\n\n  return react_1.default.createElement(\"g\", {\n    pointerEvents: \"none\"\n  }, react_1.default.createElement(\"rect\", {\n    x: tooltipRect.x,\n    y: tooltipRect.y,\n    width: tooltipRect.w,\n    rx: 5,\n    ry: 5,\n    height: tooltipRect.h,\n    fill: bgColor,\n    visibility: hidden ? \"hidden\" : \"visible\"\n  }), react_1.default.createElement(\"polygon\", {\n    fill: bgColor,\n    visibility: hidden ? \"hidden\" : \"visible\",\n    points: points\n  }), react_1.default.createElement(\"text\", {\n    ref: textRef,\n    x: tooltipRect.x + 10,\n    y: tooltipRect.y,\n    cursor: \"default\",\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    fill: textColor,\n    visibility: hidden ? \"hidden\" : \"visible\"\n  }, props.tip.length > 35 - 1 * (fontSize - 11) ? tips.map((tip, index) => {\n    return react_1.default.createElement(\"tspan\", {\n      key: tip,\n      x: tooltipRect.x + 10,\n      y: tooltipRect.y + (20 + (1 * fontSize - 11)) + 20 * index\n    }, tip);\n  }) : react_1.default.createElement(\"tspan\", {\n    x: tooltipRect.x + 10,\n    y: tooltipRect.y + (20 + (1 * fontSize - 11))\n  }, props.tip)));\n};","map":{"version":3,"sources":["C:/Users/bitcamp/____/Projects/ui/node_modules/react-path-tooltip/dist/ReactPathTooltip.js"],"names":["Object","defineProperty","exports","value","PathTooltip","tslib_1","require","react_1","__importStar","props","hidden","setHidden","useState","tooltipRect","setTooltipRect","x","y","w","h","isLeft","isTop","fontSize","fontFamily","bgColor","textColor","pathRef","svgRef","textRef","createRef","useEffect","updateTooltip","e","current","svgRect","getBoundingClientRect","textRect","width","height","addEventListener","bottomRight","toString","bottomLeft","topRight","topLeft","points","findSpaceBeforeThreshold","inputString","threshold","i","temp","length","slice","tips","startTip","tip","push","interimTip","leftover","currTip","default","createElement","pointerEvents","rx","ry","fill","visibility","ref","cursor","map","index","key"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PathTooltip = void 0;\nconst tslib_1 = require(\"tslib\");\nconst react_1 = tslib_1.__importStar(require(\"react\"));\nexports.PathTooltip = (props) => {\n    const [hidden, setHidden] = react_1.useState(true);\n    const [tooltipRect, setTooltipRect] = react_1.useState({ x: 0, y: 0, w: 0, h: 0, isLeft: false, isTop: false });\n    const [fontSize,] = react_1.useState(props[\"fontSize\"] || 12);\n    const [fontFamily,] = react_1.useState(props[\"fontFamily\"] || \"sans-serif\");\n    const [bgColor,] = react_1.useState(props[\"bgColor\"] || \"black\");\n    const [textColor,] = react_1.useState(props[\"textColor\"] || \"white\");\n    const pathRef = props.pathRef;\n    const svgRef = props.svgRef;\n    const textRef = react_1.createRef();\n    react_1.useEffect(() => {\n        const updateTooltip = (e) => {\n            if (svgRef && pathRef && textRef && svgRef.current && pathRef.current && textRef.current) {\n                const svgRect = svgRef.current.getBoundingClientRect();\n                const textRect = textRef.current.getBoundingClientRect();\n                const isLeft = ((e.x - svgRect.x) > (svgRect.width / 2));\n                const isTop = ((e.y - svgRect.y) > (svgRect.height / 2));\n                const w = textRect.width + 20;\n                const h = textRect.height + 20;\n                const x = (isLeft) ? e.x - svgRect.x + 8 - w : e.x - svgRect.x - 8;\n                const y = (isTop) ? e.y - svgRect.y - 12 - h : e.y - svgRect.y + 8;\n                setTooltipRect({ x: x, y: y, w: w, h: h, isLeft: isLeft, isTop: isTop });\n            }\n        };\n        if (pathRef && pathRef.current) {\n            pathRef.current.addEventListener('mouseover', () => { setHidden(false); });\n            pathRef.current.addEventListener('mouseleave', () => { setHidden(true); });\n            pathRef.current.addEventListener('mousemove', (e) => { if (!hidden)\n                updateTooltip(e); });\n        }\n    }, [pathRef, svgRef, textRef, hidden]);\n    const bottomRight = (tooltipRect.x + 7).toString() + \",\" + (tooltipRect.y - 10).toString() + \" \" + (tooltipRect.x + 30).toString() + \",\" + tooltipRect.y.toString() + \" \" + (tooltipRect.x + 22).toString() + \",\" + tooltipRect.y.toString();\n    const bottomLeft = (tooltipRect.x + tooltipRect.w - 8).toString() + \",\" + (tooltipRect.y - 10).toString() + \" \" + (tooltipRect.x + tooltipRect.w - 25).toString() + \",\" + tooltipRect.y.toString() + \" \" + (tooltipRect.x + tooltipRect.w - 15).toString() + \",\" + tooltipRect.y.toString();\n    const topRight = (tooltipRect.x + 7).toString() + \",\" + (tooltipRect.y + tooltipRect.h + 10).toString() + \" \" + (tooltipRect.x + 15).toString() + \",\" + (tooltipRect.y + tooltipRect.h).toString() + \" \" + (tooltipRect.x + 7).toString() + \",\" + (tooltipRect.y + tooltipRect.h).toString();\n    const topLeft = (tooltipRect.x + tooltipRect.w - 7).toString() + \",\" + (tooltipRect.y + tooltipRect.h + 10).toString() + \" \" + (tooltipRect.x + tooltipRect.w - 15).toString() + \",\" + (tooltipRect.y + tooltipRect.h).toString() + \" \" + (tooltipRect.x + tooltipRect.w - 7).toString() + \",\" + (tooltipRect.y + tooltipRect.h).toString();\n    const points = (tooltipRect.isLeft && tooltipRect.isTop) ? topLeft : (tooltipRect.isTop) ? topRight : (tooltipRect.isLeft) ? bottomLeft : bottomRight;\n    const findSpaceBeforeThreshold = (inputString, threshold) => {\n        let i = 0;\n        let temp = -1;\n        if (inputString.length <= threshold) {\n            return [\"\", inputString];\n        }\n        while (i <= inputString.length && i <= threshold) {\n            if (inputString[i] === \" \") {\n                temp = i;\n            }\n            i++;\n        }\n        return temp !== -1 ? [inputString.slice(0, temp), inputString.slice(temp + 1)] : [inputString.slice(0, threshold), inputString.slice(threshold + 1)];\n    };\n    const tips = [];\n    const startTip = findSpaceBeforeThreshold(props.tip, 35 - (1 * fontSize - 11));\n    tips.push(startTip[0]);\n    let interimTip = startTip[1];\n    let leftover = startTip[1];\n    while (interimTip !== \"\") {\n        const currTip = findSpaceBeforeThreshold(interimTip === leftover ? interimTip : leftover, 35 - (1 * fontSize - 11));\n        interimTip = currTip[0];\n        leftover = currTip[1];\n        tips.push(interimTip === \"\" ? currTip[1] : currTip[0]);\n    }\n    return (react_1.default.createElement(\"g\", { pointerEvents: \"none\" },\n        react_1.default.createElement(\"rect\", { x: tooltipRect.x, y: tooltipRect.y, width: tooltipRect.w, rx: 5, ry: 5, height: tooltipRect.h, fill: bgColor, visibility: (hidden ? \"hidden\" : \"visible\") }),\n        react_1.default.createElement(\"polygon\", { fill: bgColor, visibility: (hidden ? \"hidden\" : \"visible\"), points: points }),\n        react_1.default.createElement(\"text\", { ref: textRef, x: tooltipRect.x + 10, y: tooltipRect.y, cursor: \"default\", fontFamily: fontFamily, fontSize: fontSize, fill: textColor, visibility: (hidden ? \"hidden\" : \"visible\") }, props.tip.length > 35 - (1 * (fontSize - 11))\n            ?\n                tips.map((tip, index) => {\n                    return (react_1.default.createElement(\"tspan\", { key: tip, x: tooltipRect.x + 10, y: tooltipRect.y + (20 + (1 * fontSize - 11)) + (20 * (index)) }, tip));\n                })\n            :\n                react_1.default.createElement(\"tspan\", { x: tooltipRect.x + 10, y: tooltipRect.y + (20 + (1 * fontSize - 11)) }, props.tip))));\n};\n"]},"metadata":{},"sourceType":"script"}